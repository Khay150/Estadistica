#fififio
peso <- 9 # asignacion
x <-seq(0, 2*pi, lenght.out = 100)
sin_x <- sin(x)
cos_x <- cos(x)
cos_2_x <- cos(x^2)
plot(xs, sin_x, type = "l", col = "darkorchid3")
x <-seq(0, 2*pi, lenght.out = 100)
sin_x <- sin(x)
cos_x <- cos(x)
cos_2_x <- cos(x^2)
plot(x, sin_x, type = "l", col = "darkorchid3")
lines(x, cos_x, col="sandybrown")
lines(x, cos_2_x, col="lightseagreen")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"))
x <-seq(0, 2*pi, lenght.out = 100)
sin_x <- sin(x)
cos_x <- cos(x)
cos_2_x <- cos(x^2)
plot(x, sin_x, type = "l", col = "darkorchid3")
lines(x, cos_x, col="sandybrown")
lines(x, cos_2_x, col="lightseagreen")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),  lwd=2, lty=1)
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),
pch=16,
bty="n")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),  lwd=2, lty=1)
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),
pch=16,
bty="n")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),
pch=16,
lty=NA,
bty="n")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),
pch=16,
lty=NA,
bty="n")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),
pch=16,
lty=0,
bty="n")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),
pch=16,
lty=0,
bty="n")
x <-seq(0, 2*pi, lenght.out = 100)
sin_x <- sin(x)
cos_x <- cos(x)
cos_2_x <- cos(x^2)
plot(x, sin_x, type = "l", col = "darkorchid3")
lines(x, cos_x, col="sandybrown")
lines(x, cos_2_x, col="lightseagreen")
legend("topright", legend=c("sin(x)", "cos(x)", "cos(x^2)"),
col=c("darkorchid3", "sandybrown", "lightseagreen"),
pch=16,
lty=0,
bty="n")
datos <- read.table("archivo.txt", header = TRUE, sep = "")
datos <- read.table("autos.txt", header = TRUE, sep = "")
getwd()
setwd(D:/FRAN/Educacion/UBA/Estadistica")
setwd("D:/FRAN/Educacion/UBA/Estadistica")
getwd()
datos <- read.table("autos.txt", header = TRUE, sep = "")
View(datos)
View(datos)
View(datos[3,])
View(datos[,2])
View(datos)
View(datos)
View(datos)
# encontrar el índice del auto más barato
i_min <- which.min(datos$precio)
# obtener el valor de calidad correspondiente
calidad_min_precio <- datos$calidad[i_min]
calidad_min_precio
suma_precios <- sum(datos$precio[1:4])
suma_precios
View(apply(datos, 2, sum)) # El 2 significa columnas.
View(apply(datos, 1, sum)) # El 1 significa filas.
colors()
plot(datos$precio, datos$calidad, type = "p", col = "magenta3")
plot(datos$precio, datos$calidad, xlab = "Precio",
ylab = "Calidad", type = "p", col = "magenta3")
plot(datos$precio, datos$calidad, xlab = "Precio",
ylab = "Calidad", type = "p", col = "magenta3",
pch = 16)
datos_ordenados <- datos[order(datos$precio), ] # Ordenar por precio (ascendente)
View(datos_ordenados)
datos_ordenados <- datos[order(-datos$precio), ] # Ordenar por precio (descendente)
View(datos_ordenados)
View(mtcars)
autos_gear4 <- rownames(mtcars[mtcars$gear == 4, ])
autos_gear4
autos_gear4_manual <- rownames(mtcars[mtcars$gear == 4 & mtcars$am == 1, ])
autos_gear4_manual
mtcars$am <- factor(mtcars$am,
levels = c(0, 1),
labels = c("Automática", "Manual"))
str(mtcars$am)
set.seed(123)   # para reproducibilidad
x <- rnorm(1000)   # 1000 observaciones ~ N(0,1)
hist(x,
breaks = 30,             # número de intervalos
col = "skyblue",         # color
main = "Histograma de N(0,1)",
xlab = "Valor")
boxplot(x,
col = "lightgreen",
main = "Boxplot de N(0,1)",
horizontal = TRUE)
qqnorm(x, main = "QQ-Plot de N(0,1)")
qqline(x, col = "firebrick", lwd = 2)   # línea de referencia
graficos <- function(x, titulo){
par(mfrow = c(1,3))  # tres gráficos en una fila
# Histograma
hist(x, breaks = 30, col="skyblue", main=paste("Histograma", titulo), xlab="")
# Boxplot
boxplot(x, col="lightgreen", main=paste("Boxplot", titulo), horizontal=TRUE)
# QQ-plot
qqnorm(x, main=paste("QQ-Plot", titulo))
qqline(x, col="firebrick", lwd=2)
par(mfrow = c(1,1)) # restaurar layout
}
x1 <- rbinom(1000, 10, 0.4)
graficos(x1, "Binomial(10, 0.4)")
graficos(x2, "Uniforme(4, 8)")
x2 <- runif(1000, 4, 8)
graficos(x2, "Uniforme(4, 8)")
x3 <- rt(1000)
x3 <- rt(1000)   # df=5 grados de libertad (df por defecto es obligatorio)
x3 <- rt(1000, df=5)   # df=5 grados de libertad (df por defecto es obligatorio)
graficos(x3, "t-Student (df=5)")
x4 <- rchisq(1000, 50)
graficos(x4, "Chi-cuadrado(50)")
x5 <- rf(1000, 90, 40)
graficos(x5, "F(90,40)")
x6 <- rgamma(1000, shape=0.7)
graficos(x6, "Gamma(0.7)")
View(datos)
